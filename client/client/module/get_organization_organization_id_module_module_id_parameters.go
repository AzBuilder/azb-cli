// Code generated by go-swagger; DO NOT EDIT.

package module

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrganizationOrganizationIDModuleModuleIDParams creates a new GetOrganizationOrganizationIDModuleModuleIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationOrganizationIDModuleModuleIDParams() *GetOrganizationOrganizationIDModuleModuleIDParams {
	return &GetOrganizationOrganizationIDModuleModuleIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationOrganizationIDModuleModuleIDParamsWithTimeout creates a new GetOrganizationOrganizationIDModuleModuleIDParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationOrganizationIDModuleModuleIDParamsWithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDModuleModuleIDParams {
	return &GetOrganizationOrganizationIDModuleModuleIDParams{
		timeout: timeout,
	}
}

// NewGetOrganizationOrganizationIDModuleModuleIDParamsWithContext creates a new GetOrganizationOrganizationIDModuleModuleIDParams object
// with the ability to set a context for a request.
func NewGetOrganizationOrganizationIDModuleModuleIDParamsWithContext(ctx context.Context) *GetOrganizationOrganizationIDModuleModuleIDParams {
	return &GetOrganizationOrganizationIDModuleModuleIDParams{
		Context: ctx,
	}
}

// NewGetOrganizationOrganizationIDModuleModuleIDParamsWithHTTPClient creates a new GetOrganizationOrganizationIDModuleModuleIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationOrganizationIDModuleModuleIDParamsWithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDModuleModuleIDParams {
	return &GetOrganizationOrganizationIDModuleModuleIDParams{
		HTTPClient: client,
	}
}

/* GetOrganizationOrganizationIDModuleModuleIDParams contains all the parameters to send to the API endpoint
   for the get organization organization ID module module ID operation.

   Typically these are written to a http.Request.
*/
type GetOrganizationOrganizationIDModuleModuleIDParams struct {

	/* FieldsModule.

	   Selects the set of module fields that should be returned in the result.
	*/
	FieldsModule []string

	/* Include.

	   Selects the set of relationships that should be expanded as a compound document in the result.
	*/
	Include []string

	/* ModuleID.

	   module Identifier
	*/
	ModuleID string

	/* OrganizationID.

	   organization Identifier
	*/
	OrganizationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organization organization ID module module ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) WithDefaults() *GetOrganizationOrganizationIDModuleModuleIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organization organization ID module module ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) WithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDModuleModuleIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) WithContext(ctx context.Context) *GetOrganizationOrganizationIDModuleModuleIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) WithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDModuleModuleIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFieldsModule adds the fieldsModule to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) WithFieldsModule(fieldsModule []string) *GetOrganizationOrganizationIDModuleModuleIDParams {
	o.SetFieldsModule(fieldsModule)
	return o
}

// SetFieldsModule adds the fieldsModule to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) SetFieldsModule(fieldsModule []string) {
	o.FieldsModule = fieldsModule
}

// WithInclude adds the include to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) WithInclude(include []string) *GetOrganizationOrganizationIDModuleModuleIDParams {
	o.SetInclude(include)
	return o
}

// SetInclude adds the include to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) SetInclude(include []string) {
	o.Include = include
}

// WithModuleID adds the moduleID to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) WithModuleID(moduleID string) *GetOrganizationOrganizationIDModuleModuleIDParams {
	o.SetModuleID(moduleID)
	return o
}

// SetModuleID adds the moduleId to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) SetModuleID(moduleID string) {
	o.ModuleID = moduleID
}

// WithOrganizationID adds the organizationID to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) WithOrganizationID(organizationID string) *GetOrganizationOrganizationIDModuleModuleIDParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the get organization organization ID module module ID params
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FieldsModule != nil {

		// binding items for fields[module]
		joinedFieldsModule := o.bindParamFieldsModule(reg)

		// query array param fields[module]
		if err := r.SetQueryParam("fields[module]", joinedFieldsModule...); err != nil {
			return err
		}
	}

	if o.Include != nil {

		// binding items for include
		joinedInclude := o.bindParamInclude(reg)

		// query array param include
		if err := r.SetQueryParam("include", joinedInclude...); err != nil {
			return err
		}
	}

	// path param moduleId
	if err := r.SetPathParam("moduleId", o.ModuleID); err != nil {
		return err
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetOrganizationOrganizationIDModuleModuleID binds the parameter fields[module]
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) bindParamFieldsModule(formats strfmt.Registry) []string {
	fieldsModuleIR := o.FieldsModule

	var fieldsModuleIC []string
	for _, fieldsModuleIIR := range fieldsModuleIR { // explode []string

		fieldsModuleIIV := fieldsModuleIIR // string as string
		fieldsModuleIC = append(fieldsModuleIC, fieldsModuleIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsModuleIS := swag.JoinByFormat(fieldsModuleIC, "csv")

	return fieldsModuleIS
}

// bindParamGetOrganizationOrganizationIDModuleModuleID binds the parameter include
func (o *GetOrganizationOrganizationIDModuleModuleIDParams) bindParamInclude(formats strfmt.Registry) []string {
	includeIR := o.Include

	var includeIC []string
	for _, includeIIR := range includeIR { // explode []string

		includeIIV := includeIIR // string as string
		includeIC = append(includeIC, includeIIV)
	}

	// items.CollectionFormat: "csv"
	includeIS := swag.JoinByFormat(includeIC, "csv")

	return includeIS
}
