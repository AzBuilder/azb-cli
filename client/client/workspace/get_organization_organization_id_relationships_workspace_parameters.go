// Code generated by go-swagger; DO NOT EDIT.

package workspace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrganizationOrganizationIDRelationshipsWorkspaceParams creates a new GetOrganizationOrganizationIDRelationshipsWorkspaceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationOrganizationIDRelationshipsWorkspaceParams() *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	return &GetOrganizationOrganizationIDRelationshipsWorkspaceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationOrganizationIDRelationshipsWorkspaceParamsWithTimeout creates a new GetOrganizationOrganizationIDRelationshipsWorkspaceParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationOrganizationIDRelationshipsWorkspaceParamsWithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	return &GetOrganizationOrganizationIDRelationshipsWorkspaceParams{
		timeout: timeout,
	}
}

// NewGetOrganizationOrganizationIDRelationshipsWorkspaceParamsWithContext creates a new GetOrganizationOrganizationIDRelationshipsWorkspaceParams object
// with the ability to set a context for a request.
func NewGetOrganizationOrganizationIDRelationshipsWorkspaceParamsWithContext(ctx context.Context) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	return &GetOrganizationOrganizationIDRelationshipsWorkspaceParams{
		Context: ctx,
	}
}

// NewGetOrganizationOrganizationIDRelationshipsWorkspaceParamsWithHTTPClient creates a new GetOrganizationOrganizationIDRelationshipsWorkspaceParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationOrganizationIDRelationshipsWorkspaceParamsWithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	return &GetOrganizationOrganizationIDRelationshipsWorkspaceParams{
		HTTPClient: client,
	}
}

/* GetOrganizationOrganizationIDRelationshipsWorkspaceParams contains all the parameters to send to the API endpoint
   for the get organization organization ID relationships workspace operation.

   Typically these are written to a http.Request.
*/
type GetOrganizationOrganizationIDRelationshipsWorkspaceParams struct {

	/* FilterWorkspace.

	   Filters the collection of workspace using a 'disjoint' RSQL expression
	*/
	FilterWorkspace *string

	/* OrganizationID.

	   organization Identifier
	*/
	OrganizationID string

	/* PageLimit.

	   Maximum number of items to return.  Can be used with page[offset]
	*/
	PageLimit *int64

	/* PageNumber.

	   Number of pages to return.  Can be used with page[size]
	*/
	PageNumber *int64

	/* PageOffset.

	   Offset from 0 to start paginating.  Can be used with page[limit]
	*/
	PageOffset *int64

	/* PageSize.

	   Number of elements per page.  Can be used with page[number]
	*/
	PageSize *int64

	/* PageTotals.

	   For requesting total pages/records be included in the response page meta data
	*/
	PageTotals *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organization organization ID relationships workspace params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithDefaults() *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organization organization ID relationships workspace params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithContext(ctx context.Context) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFilterWorkspace adds the filterWorkspace to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithFilterWorkspace(filterWorkspace *string) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetFilterWorkspace(filterWorkspace)
	return o
}

// SetFilterWorkspace adds the filterWorkspace to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetFilterWorkspace(filterWorkspace *string) {
	o.FilterWorkspace = filterWorkspace
}

// WithOrganizationID adds the organizationID to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithOrganizationID(organizationID string) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WithPageLimit adds the pageLimit to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithPageLimit(pageLimit *int64) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetPageLimit(pageLimit)
	return o
}

// SetPageLimit adds the pageLimit to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetPageLimit(pageLimit *int64) {
	o.PageLimit = pageLimit
}

// WithPageNumber adds the pageNumber to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithPageNumber(pageNumber *int64) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetPageNumber(pageNumber *int64) {
	o.PageNumber = pageNumber
}

// WithPageOffset adds the pageOffset to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithPageOffset(pageOffset *int64) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetPageOffset(pageOffset)
	return o
}

// SetPageOffset adds the pageOffset to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetPageOffset(pageOffset *int64) {
	o.PageOffset = pageOffset
}

// WithPageSize adds the pageSize to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithPageSize(pageSize *int64) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithPageTotals adds the pageTotals to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WithPageTotals(pageTotals *string) *GetOrganizationOrganizationIDRelationshipsWorkspaceParams {
	o.SetPageTotals(pageTotals)
	return o
}

// SetPageTotals adds the pageTotals to the get organization organization ID relationships workspace params
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) SetPageTotals(pageTotals *string) {
	o.PageTotals = pageTotals
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationOrganizationIDRelationshipsWorkspaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FilterWorkspace != nil {

		// query param filter[workspace]
		var qrFilterWorkspace string

		if o.FilterWorkspace != nil {
			qrFilterWorkspace = *o.FilterWorkspace
		}
		qFilterWorkspace := qrFilterWorkspace
		if qFilterWorkspace != "" {

			if err := r.SetQueryParam("filter[workspace]", qFilterWorkspace); err != nil {
				return err
			}
		}
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if o.PageLimit != nil {

		// query param page[limit]
		var qrPageLimit int64

		if o.PageLimit != nil {
			qrPageLimit = *o.PageLimit
		}
		qPageLimit := swag.FormatInt64(qrPageLimit)
		if qPageLimit != "" {

			if err := r.SetQueryParam("page[limit]", qPageLimit); err != nil {
				return err
			}
		}
	}

	if o.PageNumber != nil {

		// query param page[number]
		var qrPageNumber int64

		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := swag.FormatInt64(qrPageNumber)
		if qPageNumber != "" {

			if err := r.SetQueryParam("page[number]", qPageNumber); err != nil {
				return err
			}
		}
	}

	if o.PageOffset != nil {

		// query param page[offset]
		var qrPageOffset int64

		if o.PageOffset != nil {
			qrPageOffset = *o.PageOffset
		}
		qPageOffset := swag.FormatInt64(qrPageOffset)
		if qPageOffset != "" {

			if err := r.SetQueryParam("page[offset]", qPageOffset); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param page[size]
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("page[size]", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.PageTotals != nil {

		// query param page[totals]
		var qrPageTotals string

		if o.PageTotals != nil {
			qrPageTotals = *o.PageTotals
		}
		qPageTotals := qrPageTotals
		if qPageTotals != "" {

			if err := r.SetQueryParam("page[totals]", qPageTotals); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
