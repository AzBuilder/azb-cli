// Code generated by go-swagger; DO NOT EDIT.

package workspace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrganizationOrganizationIDWorkspaceWorkspaceIDParams creates a new GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationOrganizationIDWorkspaceWorkspaceIDParams() *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	return &GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationOrganizationIDWorkspaceWorkspaceIDParamsWithTimeout creates a new GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationOrganizationIDWorkspaceWorkspaceIDParamsWithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	return &GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams{
		timeout: timeout,
	}
}

// NewGetOrganizationOrganizationIDWorkspaceWorkspaceIDParamsWithContext creates a new GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams object
// with the ability to set a context for a request.
func NewGetOrganizationOrganizationIDWorkspaceWorkspaceIDParamsWithContext(ctx context.Context) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	return &GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams{
		Context: ctx,
	}
}

// NewGetOrganizationOrganizationIDWorkspaceWorkspaceIDParamsWithHTTPClient creates a new GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationOrganizationIDWorkspaceWorkspaceIDParamsWithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	return &GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams{
		HTTPClient: client,
	}
}

/* GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams contains all the parameters to send to the API endpoint
   for the get organization organization ID workspace workspace ID operation.

   Typically these are written to a http.Request.
*/
type GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams struct {

	/* FieldsWorkspace.

	   Selects the set of workspace fields that should be returned in the result.
	*/
	FieldsWorkspace []string

	/* Include.

	   Selects the set of relationships that should be expanded as a compound document in the result.
	*/
	Include []string

	/* OrganizationID.

	   organization Identifier
	*/
	OrganizationID string

	/* WorkspaceID.

	   workspace Identifier
	*/
	WorkspaceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organization organization ID workspace workspace ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) WithDefaults() *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organization organization ID workspace workspace ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) WithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) WithContext(ctx context.Context) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) WithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFieldsWorkspace adds the fieldsWorkspace to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) WithFieldsWorkspace(fieldsWorkspace []string) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	o.SetFieldsWorkspace(fieldsWorkspace)
	return o
}

// SetFieldsWorkspace adds the fieldsWorkspace to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) SetFieldsWorkspace(fieldsWorkspace []string) {
	o.FieldsWorkspace = fieldsWorkspace
}

// WithInclude adds the include to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) WithInclude(include []string) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	o.SetInclude(include)
	return o
}

// SetInclude adds the include to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) SetInclude(include []string) {
	o.Include = include
}

// WithOrganizationID adds the organizationID to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) WithOrganizationID(organizationID string) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WithWorkspaceID adds the workspaceID to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) WithWorkspaceID(workspaceID string) *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams {
	o.SetWorkspaceID(workspaceID)
	return o
}

// SetWorkspaceID adds the workspaceId to the get organization organization ID workspace workspace ID params
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) SetWorkspaceID(workspaceID string) {
	o.WorkspaceID = workspaceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FieldsWorkspace != nil {

		// binding items for fields[workspace]
		joinedFieldsWorkspace := o.bindParamFieldsWorkspace(reg)

		// query array param fields[workspace]
		if err := r.SetQueryParam("fields[workspace]", joinedFieldsWorkspace...); err != nil {
			return err
		}
	}

	if o.Include != nil {

		// binding items for include
		joinedInclude := o.bindParamInclude(reg)

		// query array param include
		if err := r.SetQueryParam("include", joinedInclude...); err != nil {
			return err
		}
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	// path param workspaceId
	if err := r.SetPathParam("workspaceId", o.WorkspaceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetOrganizationOrganizationIDWorkspaceWorkspaceID binds the parameter fields[workspace]
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) bindParamFieldsWorkspace(formats strfmt.Registry) []string {
	fieldsWorkspaceIR := o.FieldsWorkspace

	var fieldsWorkspaceIC []string
	for _, fieldsWorkspaceIIR := range fieldsWorkspaceIR { // explode []string

		fieldsWorkspaceIIV := fieldsWorkspaceIIR // string as string
		fieldsWorkspaceIC = append(fieldsWorkspaceIC, fieldsWorkspaceIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsWorkspaceIS := swag.JoinByFormat(fieldsWorkspaceIC, "csv")

	return fieldsWorkspaceIS
}

// bindParamGetOrganizationOrganizationIDWorkspaceWorkspaceID binds the parameter include
func (o *GetOrganizationOrganizationIDWorkspaceWorkspaceIDParams) bindParamInclude(formats strfmt.Registry) []string {
	includeIR := o.Include

	var includeIC []string
	for _, includeIIR := range includeIR { // explode []string

		includeIIV := includeIIR // string as string
		includeIC = append(includeIC, includeIIV)
	}

	// items.CollectionFormat: "csv"
	includeIS := swag.JoinByFormat(includeIC, "csv")

	return includeIS
}
