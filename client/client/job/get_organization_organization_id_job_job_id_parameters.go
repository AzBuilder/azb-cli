// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrganizationOrganizationIDJobJobIDParams creates a new GetOrganizationOrganizationIDJobJobIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationOrganizationIDJobJobIDParams() *GetOrganizationOrganizationIDJobJobIDParams {
	return &GetOrganizationOrganizationIDJobJobIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationOrganizationIDJobJobIDParamsWithTimeout creates a new GetOrganizationOrganizationIDJobJobIDParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationOrganizationIDJobJobIDParamsWithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDJobJobIDParams {
	return &GetOrganizationOrganizationIDJobJobIDParams{
		timeout: timeout,
	}
}

// NewGetOrganizationOrganizationIDJobJobIDParamsWithContext creates a new GetOrganizationOrganizationIDJobJobIDParams object
// with the ability to set a context for a request.
func NewGetOrganizationOrganizationIDJobJobIDParamsWithContext(ctx context.Context) *GetOrganizationOrganizationIDJobJobIDParams {
	return &GetOrganizationOrganizationIDJobJobIDParams{
		Context: ctx,
	}
}

// NewGetOrganizationOrganizationIDJobJobIDParamsWithHTTPClient creates a new GetOrganizationOrganizationIDJobJobIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationOrganizationIDJobJobIDParamsWithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDJobJobIDParams {
	return &GetOrganizationOrganizationIDJobJobIDParams{
		HTTPClient: client,
	}
}

/* GetOrganizationOrganizationIDJobJobIDParams contains all the parameters to send to the API endpoint
   for the get organization organization ID job job ID operation.

   Typically these are written to a http.Request.
*/
type GetOrganizationOrganizationIDJobJobIDParams struct {

	/* FieldsJob.

	   Selects the set of job fields that should be returned in the result.
	*/
	FieldsJob []string

	/* Include.

	   Selects the set of relationships that should be expanded as a compound document in the result.
	*/
	Include []string

	/* JobID.

	   job Identifier
	*/
	JobID string

	/* OrganizationID.

	   organization Identifier
	*/
	OrganizationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organization organization ID job job ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDJobJobIDParams) WithDefaults() *GetOrganizationOrganizationIDJobJobIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organization organization ID job job ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDJobJobIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) WithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDJobJobIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) WithContext(ctx context.Context) *GetOrganizationOrganizationIDJobJobIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) WithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDJobJobIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFieldsJob adds the fieldsJob to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) WithFieldsJob(fieldsJob []string) *GetOrganizationOrganizationIDJobJobIDParams {
	o.SetFieldsJob(fieldsJob)
	return o
}

// SetFieldsJob adds the fieldsJob to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) SetFieldsJob(fieldsJob []string) {
	o.FieldsJob = fieldsJob
}

// WithInclude adds the include to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) WithInclude(include []string) *GetOrganizationOrganizationIDJobJobIDParams {
	o.SetInclude(include)
	return o
}

// SetInclude adds the include to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) SetInclude(include []string) {
	o.Include = include
}

// WithJobID adds the jobID to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) WithJobID(jobID string) *GetOrganizationOrganizationIDJobJobIDParams {
	o.SetJobID(jobID)
	return o
}

// SetJobID adds the jobId to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) SetJobID(jobID string) {
	o.JobID = jobID
}

// WithOrganizationID adds the organizationID to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) WithOrganizationID(organizationID string) *GetOrganizationOrganizationIDJobJobIDParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the get organization organization ID job job ID params
func (o *GetOrganizationOrganizationIDJobJobIDParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationOrganizationIDJobJobIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FieldsJob != nil {

		// binding items for fields[job]
		joinedFieldsJob := o.bindParamFieldsJob(reg)

		// query array param fields[job]
		if err := r.SetQueryParam("fields[job]", joinedFieldsJob...); err != nil {
			return err
		}
	}

	if o.Include != nil {

		// binding items for include
		joinedInclude := o.bindParamInclude(reg)

		// query array param include
		if err := r.SetQueryParam("include", joinedInclude...); err != nil {
			return err
		}
	}

	// path param jobId
	if err := r.SetPathParam("jobId", o.JobID); err != nil {
		return err
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetOrganizationOrganizationIDJobJobID binds the parameter fields[job]
func (o *GetOrganizationOrganizationIDJobJobIDParams) bindParamFieldsJob(formats strfmt.Registry) []string {
	fieldsJobIR := o.FieldsJob

	var fieldsJobIC []string
	for _, fieldsJobIIR := range fieldsJobIR { // explode []string

		fieldsJobIIV := fieldsJobIIR // string as string
		fieldsJobIC = append(fieldsJobIC, fieldsJobIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsJobIS := swag.JoinByFormat(fieldsJobIC, "csv")

	return fieldsJobIS
}

// bindParamGetOrganizationOrganizationIDJobJobID binds the parameter include
func (o *GetOrganizationOrganizationIDJobJobIDParams) bindParamInclude(formats strfmt.Registry) []string {
	includeIR := o.Include

	var includeIC []string
	for _, includeIIR := range includeIR { // explode []string

		includeIIV := includeIIR // string as string
		includeIC = append(includeIC, includeIIV)
	}

	// items.CollectionFormat: "csv"
	includeIS := swag.JoinByFormat(includeIC, "csv")

	return includeIS
}
