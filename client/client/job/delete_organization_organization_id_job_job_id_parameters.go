// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteOrganizationOrganizationIDJobJobIDParams creates a new DeleteOrganizationOrganizationIDJobJobIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteOrganizationOrganizationIDJobJobIDParams() *DeleteOrganizationOrganizationIDJobJobIDParams {
	return &DeleteOrganizationOrganizationIDJobJobIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteOrganizationOrganizationIDJobJobIDParamsWithTimeout creates a new DeleteOrganizationOrganizationIDJobJobIDParams object
// with the ability to set a timeout on a request.
func NewDeleteOrganizationOrganizationIDJobJobIDParamsWithTimeout(timeout time.Duration) *DeleteOrganizationOrganizationIDJobJobIDParams {
	return &DeleteOrganizationOrganizationIDJobJobIDParams{
		timeout: timeout,
	}
}

// NewDeleteOrganizationOrganizationIDJobJobIDParamsWithContext creates a new DeleteOrganizationOrganizationIDJobJobIDParams object
// with the ability to set a context for a request.
func NewDeleteOrganizationOrganizationIDJobJobIDParamsWithContext(ctx context.Context) *DeleteOrganizationOrganizationIDJobJobIDParams {
	return &DeleteOrganizationOrganizationIDJobJobIDParams{
		Context: ctx,
	}
}

// NewDeleteOrganizationOrganizationIDJobJobIDParamsWithHTTPClient creates a new DeleteOrganizationOrganizationIDJobJobIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteOrganizationOrganizationIDJobJobIDParamsWithHTTPClient(client *http.Client) *DeleteOrganizationOrganizationIDJobJobIDParams {
	return &DeleteOrganizationOrganizationIDJobJobIDParams{
		HTTPClient: client,
	}
}

/* DeleteOrganizationOrganizationIDJobJobIDParams contains all the parameters to send to the API endpoint
   for the delete organization organization ID job job ID operation.

   Typically these are written to a http.Request.
*/
type DeleteOrganizationOrganizationIDJobJobIDParams struct {

	/* JobID.

	   job Identifier
	*/
	JobID string

	/* OrganizationID.

	   organization Identifier
	*/
	OrganizationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete organization organization ID job job ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) WithDefaults() *DeleteOrganizationOrganizationIDJobJobIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete organization organization ID job job ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) WithTimeout(timeout time.Duration) *DeleteOrganizationOrganizationIDJobJobIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) WithContext(ctx context.Context) *DeleteOrganizationOrganizationIDJobJobIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) WithHTTPClient(client *http.Client) *DeleteOrganizationOrganizationIDJobJobIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithJobID adds the jobID to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) WithJobID(jobID string) *DeleteOrganizationOrganizationIDJobJobIDParams {
	o.SetJobID(jobID)
	return o
}

// SetJobID adds the jobId to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) SetJobID(jobID string) {
	o.JobID = jobID
}

// WithOrganizationID adds the organizationID to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) WithOrganizationID(organizationID string) *DeleteOrganizationOrganizationIDJobJobIDParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the delete organization organization ID job job ID params
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteOrganizationOrganizationIDJobJobIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param jobId
	if err := r.SetPathParam("jobId", o.JobID); err != nil {
		return err
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
