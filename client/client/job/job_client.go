// Code generated by go-swagger; DO NOT EDIT.

package job

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new job API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for job API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteOrganizationOrganizationIDJobJobID(params *DeleteOrganizationOrganizationIDJobJobIDParams, opts ...ClientOption) (*DeleteOrganizationOrganizationIDJobJobIDNoContent, error)

	DeleteOrganizationOrganizationIDRelationshipsJob(params *DeleteOrganizationOrganizationIDRelationshipsJobParams, opts ...ClientOption) (*DeleteOrganizationOrganizationIDRelationshipsJobNoContent, error)

	GetOrganizationOrganizationIDJob(params *GetOrganizationOrganizationIDJobParams, opts ...ClientOption) (*GetOrganizationOrganizationIDJobOK, error)

	GetOrganizationOrganizationIDJobJobID(params *GetOrganizationOrganizationIDJobJobIDParams, opts ...ClientOption) (*GetOrganizationOrganizationIDJobJobIDOK, error)

	GetOrganizationOrganizationIDRelationshipsJob(params *GetOrganizationOrganizationIDRelationshipsJobParams, opts ...ClientOption) (*GetOrganizationOrganizationIDRelationshipsJobOK, error)

	PatchOrganizationOrganizationIDJobJobID(params *PatchOrganizationOrganizationIDJobJobIDParams, opts ...ClientOption) (*PatchOrganizationOrganizationIDJobJobIDNoContent, error)

	PatchOrganizationOrganizationIDRelationshipsJob(params *PatchOrganizationOrganizationIDRelationshipsJobParams, opts ...ClientOption) (*PatchOrganizationOrganizationIDRelationshipsJobNoContent, error)

	PostOrganizationOrganizationIDJob(params *PostOrganizationOrganizationIDJobParams, opts ...ClientOption) (*PostOrganizationOrganizationIDJobCreated, error)

	PostOrganizationOrganizationIDRelationshipsJob(params *PostOrganizationOrganizationIDRelationshipsJobParams, opts ...ClientOption) (*PostOrganizationOrganizationIDRelationshipsJobCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteOrganizationOrganizationIDJobJobID Deletes an instance of type job
*/
func (a *Client) DeleteOrganizationOrganizationIDJobJobID(params *DeleteOrganizationOrganizationIDJobJobIDParams, opts ...ClientOption) (*DeleteOrganizationOrganizationIDJobJobIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteOrganizationOrganizationIDJobJobIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteOrganizationOrganizationIDJobJobID",
		Method:             "DELETE",
		PathPattern:        "/organization/{organizationId}/job/{jobId}",
		ProducesMediaTypes: []string{"application/vnd.api+json"},
		ConsumesMediaTypes: []string{"application/vnd.api+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteOrganizationOrganizationIDJobJobIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteOrganizationOrganizationIDJobJobIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteOrganizationOrganizationIDJobJobID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteOrganizationOrganizationIDRelationshipsJob Deletes items from the relationship job
*/
func (a *Client) DeleteOrganizationOrganizationIDRelationshipsJob(params *DeleteOrganizationOrganizationIDRelationshipsJobParams, opts ...ClientOption) (*DeleteOrganizationOrganizationIDRelationshipsJobNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteOrganizationOrganizationIDRelationshipsJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteOrganizationOrganizationIDRelationshipsJob",
		Method:             "DELETE",
		PathPattern:        "/organization/{organizationId}/relationships/job",
		ProducesMediaTypes: []string{"application/vnd.api+json"},
		ConsumesMediaTypes: []string{"application/vnd.api+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteOrganizationOrganizationIDRelationshipsJobReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteOrganizationOrganizationIDRelationshipsJobNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteOrganizationOrganizationIDRelationshipsJob: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetOrganizationOrganizationIDJob Returns the relationship job
*/
func (a *Client) GetOrganizationOrganizationIDJob(params *GetOrganizationOrganizationIDJobParams, opts ...ClientOption) (*GetOrganizationOrganizationIDJobOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationOrganizationIDJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetOrganizationOrganizationIDJob",
		Method:             "GET",
		PathPattern:        "/organization/{organizationId}/job",
		ProducesMediaTypes: []string{"application/vnd.api+json"},
		ConsumesMediaTypes: []string{"application/vnd.api+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetOrganizationOrganizationIDJobReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationOrganizationIDJobOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetOrganizationOrganizationIDJob: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetOrganizationOrganizationIDJobJobID Returns an instance of type job
*/
func (a *Client) GetOrganizationOrganizationIDJobJobID(params *GetOrganizationOrganizationIDJobJobIDParams, opts ...ClientOption) (*GetOrganizationOrganizationIDJobJobIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationOrganizationIDJobJobIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetOrganizationOrganizationIDJobJobID",
		Method:             "GET",
		PathPattern:        "/organization/{organizationId}/job/{jobId}",
		ProducesMediaTypes: []string{"application/vnd.api+json"},
		ConsumesMediaTypes: []string{"application/vnd.api+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetOrganizationOrganizationIDJobJobIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationOrganizationIDJobJobIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetOrganizationOrganizationIDJobJobID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetOrganizationOrganizationIDRelationshipsJob Returns the relationship identifiers for job
*/
func (a *Client) GetOrganizationOrganizationIDRelationshipsJob(params *GetOrganizationOrganizationIDRelationshipsJobParams, opts ...ClientOption) (*GetOrganizationOrganizationIDRelationshipsJobOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOrganizationOrganizationIDRelationshipsJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetOrganizationOrganizationIDRelationshipsJob",
		Method:             "GET",
		PathPattern:        "/organization/{organizationId}/relationships/job",
		ProducesMediaTypes: []string{"application/vnd.api+json"},
		ConsumesMediaTypes: []string{"application/vnd.api+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetOrganizationOrganizationIDRelationshipsJobReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOrganizationOrganizationIDRelationshipsJobOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetOrganizationOrganizationIDRelationshipsJob: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchOrganizationOrganizationIDJobJobID Modifies an instance of type job
*/
func (a *Client) PatchOrganizationOrganizationIDJobJobID(params *PatchOrganizationOrganizationIDJobJobIDParams, opts ...ClientOption) (*PatchOrganizationOrganizationIDJobJobIDNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchOrganizationOrganizationIDJobJobIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PatchOrganizationOrganizationIDJobJobID",
		Method:             "PATCH",
		PathPattern:        "/organization/{organizationId}/job/{jobId}",
		ProducesMediaTypes: []string{"application/vnd.api+json"},
		ConsumesMediaTypes: []string{"application/vnd.api+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchOrganizationOrganizationIDJobJobIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchOrganizationOrganizationIDJobJobIDNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchOrganizationOrganizationIDJobJobID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchOrganizationOrganizationIDRelationshipsJob Replaces the relationship job
*/
func (a *Client) PatchOrganizationOrganizationIDRelationshipsJob(params *PatchOrganizationOrganizationIDRelationshipsJobParams, opts ...ClientOption) (*PatchOrganizationOrganizationIDRelationshipsJobNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchOrganizationOrganizationIDRelationshipsJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PatchOrganizationOrganizationIDRelationshipsJob",
		Method:             "PATCH",
		PathPattern:        "/organization/{organizationId}/relationships/job",
		ProducesMediaTypes: []string{"application/vnd.api+json"},
		ConsumesMediaTypes: []string{"application/vnd.api+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchOrganizationOrganizationIDRelationshipsJobReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchOrganizationOrganizationIDRelationshipsJobNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchOrganizationOrganizationIDRelationshipsJob: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostOrganizationOrganizationIDJob Creates an item of type job and adds it to job
*/
func (a *Client) PostOrganizationOrganizationIDJob(params *PostOrganizationOrganizationIDJobParams, opts ...ClientOption) (*PostOrganizationOrganizationIDJobCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationOrganizationIDJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostOrganizationOrganizationIDJob",
		Method:             "POST",
		PathPattern:        "/organization/{organizationId}/job",
		ProducesMediaTypes: []string{"application/vnd.api+json"},
		ConsumesMediaTypes: []string{"application/vnd.api+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostOrganizationOrganizationIDJobReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationOrganizationIDJobCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostOrganizationOrganizationIDJob: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostOrganizationOrganizationIDRelationshipsJob Adds items to the relationship job
*/
func (a *Client) PostOrganizationOrganizationIDRelationshipsJob(params *PostOrganizationOrganizationIDRelationshipsJobParams, opts ...ClientOption) (*PostOrganizationOrganizationIDRelationshipsJobCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostOrganizationOrganizationIDRelationshipsJobParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostOrganizationOrganizationIDRelationshipsJob",
		Method:             "POST",
		PathPattern:        "/organization/{organizationId}/relationships/job",
		ProducesMediaTypes: []string{"application/vnd.api+json"},
		ConsumesMediaTypes: []string{"application/vnd.api+json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostOrganizationOrganizationIDRelationshipsJobReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostOrganizationOrganizationIDRelationshipsJobCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostOrganizationOrganizationIDRelationshipsJob: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
