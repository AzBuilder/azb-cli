// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOrganizationOrganizationIDParams creates a new GetOrganizationOrganizationIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationOrganizationIDParams() *GetOrganizationOrganizationIDParams {
	return &GetOrganizationOrganizationIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationOrganizationIDParamsWithTimeout creates a new GetOrganizationOrganizationIDParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationOrganizationIDParamsWithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDParams {
	return &GetOrganizationOrganizationIDParams{
		timeout: timeout,
	}
}

// NewGetOrganizationOrganizationIDParamsWithContext creates a new GetOrganizationOrganizationIDParams object
// with the ability to set a context for a request.
func NewGetOrganizationOrganizationIDParamsWithContext(ctx context.Context) *GetOrganizationOrganizationIDParams {
	return &GetOrganizationOrganizationIDParams{
		Context: ctx,
	}
}

// NewGetOrganizationOrganizationIDParamsWithHTTPClient creates a new GetOrganizationOrganizationIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationOrganizationIDParamsWithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDParams {
	return &GetOrganizationOrganizationIDParams{
		HTTPClient: client,
	}
}

/* GetOrganizationOrganizationIDParams contains all the parameters to send to the API endpoint
   for the get organization organization ID operation.

   Typically these are written to a http.Request.
*/
type GetOrganizationOrganizationIDParams struct {

	/* FieldsOrganization.

	   Selects the set of organization fields that should be returned in the result.
	*/
	FieldsOrganization []string

	/* Include.

	   Selects the set of relationships that should be expanded as a compound document in the result.
	*/
	Include []string

	/* OrganizationID.

	   organization Identifier
	*/
	OrganizationID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organization organization ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDParams) WithDefaults() *GetOrganizationOrganizationIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organization organization ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationOrganizationIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) WithTimeout(timeout time.Duration) *GetOrganizationOrganizationIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) WithContext(ctx context.Context) *GetOrganizationOrganizationIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) WithHTTPClient(client *http.Client) *GetOrganizationOrganizationIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFieldsOrganization adds the fieldsOrganization to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) WithFieldsOrganization(fieldsOrganization []string) *GetOrganizationOrganizationIDParams {
	o.SetFieldsOrganization(fieldsOrganization)
	return o
}

// SetFieldsOrganization adds the fieldsOrganization to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) SetFieldsOrganization(fieldsOrganization []string) {
	o.FieldsOrganization = fieldsOrganization
}

// WithInclude adds the include to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) WithInclude(include []string) *GetOrganizationOrganizationIDParams {
	o.SetInclude(include)
	return o
}

// SetInclude adds the include to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) SetInclude(include []string) {
	o.Include = include
}

// WithOrganizationID adds the organizationID to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) WithOrganizationID(organizationID string) *GetOrganizationOrganizationIDParams {
	o.SetOrganizationID(organizationID)
	return o
}

// SetOrganizationID adds the organizationId to the get organization organization ID params
func (o *GetOrganizationOrganizationIDParams) SetOrganizationID(organizationID string) {
	o.OrganizationID = organizationID
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationOrganizationIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.FieldsOrganization != nil {

		// binding items for fields[organization]
		joinedFieldsOrganization := o.bindParamFieldsOrganization(reg)

		// query array param fields[organization]
		if err := r.SetQueryParam("fields[organization]", joinedFieldsOrganization...); err != nil {
			return err
		}
	}

	if o.Include != nil {

		// binding items for include
		joinedInclude := o.bindParamInclude(reg)

		// query array param include
		if err := r.SetQueryParam("include", joinedInclude...); err != nil {
			return err
		}
	}

	// path param organizationId
	if err := r.SetPathParam("organizationId", o.OrganizationID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetOrganizationOrganizationID binds the parameter fields[organization]
func (o *GetOrganizationOrganizationIDParams) bindParamFieldsOrganization(formats strfmt.Registry) []string {
	fieldsOrganizationIR := o.FieldsOrganization

	var fieldsOrganizationIC []string
	for _, fieldsOrganizationIIR := range fieldsOrganizationIR { // explode []string

		fieldsOrganizationIIV := fieldsOrganizationIIR // string as string
		fieldsOrganizationIC = append(fieldsOrganizationIC, fieldsOrganizationIIV)
	}

	// items.CollectionFormat: "csv"
	fieldsOrganizationIS := swag.JoinByFormat(fieldsOrganizationIC, "csv")

	return fieldsOrganizationIS
}

// bindParamGetOrganizationOrganizationID binds the parameter include
func (o *GetOrganizationOrganizationIDParams) bindParamInclude(formats strfmt.Registry) []string {
	includeIR := o.Include

	var includeIC []string
	for _, includeIIR := range includeIR { // explode []string

		includeIIV := includeIIR // string as string
		includeIC = append(includeIC, includeIIV)
	}

	// items.CollectionFormat: "csv"
	includeIS := swag.JoinByFormat(includeIC, "csv")

	return includeIS
}
